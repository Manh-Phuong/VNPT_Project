spring:
  application:
    name: nestecom

server:
  port: 8080
---
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/nest_ecom
    driverClassName: com.mysql.cj.jdbc.Driver
    username: root
    password:
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    database: MYSQL
    database-platform: org.hibernate.dialect.MySQL8Dialect
#management:
#  endpoints:
#    web:
#      exposure:
#        include: '*'
#logging:
#  level:
#    root: INFO
#    org.springframework.security: DEBUG

#---
#spring:
#  cache:
#    cache-names: USER
#    type: redis
#    redis:
#      time-to-live: PT2M
#  data:
#    redis:
#      host: localhost
#      port: 6379
#      password: Redis@123
#    mongodb:
#      host: "localhost"
#      port: 27017
#      username: "user" # use have to create this user
#      password: "User123"
#      database: "sample_db"
##      uri: "mongodb://localhost:27017/sample_db"
---
spring:
  cache:
    cache-names: USER
    type: redis
    redis:
      time-to-live: PT2M
  data:
    redis:
      host: localhost
      port: 6379
#      password: Redis@123
      password:

#---
#reqres:
#  url: https://reqres.in
#---
#sentry:
#  dsn: https://xxx@xxx.ingest.sentry.io/xxx
jwt:
  signerKey: "1TjXchw5FloESb63Kc+DFhTARvpWL4jUGCwfGWxuG5SIf/1y/LgJxHnMqaF6A/ij"
---
spring:
  mail:
    host: smtp.gmail.com
    port: 587
    username: manhphuong.23112002@gmail.com
    password: mhod fare svjr rdlp
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

---
spring:
  kafka:
    template:
      default-topic: seller
    consumer:
      bootstrap-servers:
      - localhost:9092
      group-id: orderGroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer



